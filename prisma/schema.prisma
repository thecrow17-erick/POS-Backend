// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum Rol{
  Administrador
  Empleado
}

model Employee{
  id                      String @default(uuid()) @id
  codeEmployee            String @db.Text
  email                   String @db.VarChar(50)
  name                    String @db.VarChar(50)
  phone                   String @db.VarChar(8)
  photo                   String? @db.Text
  status                  Boolean @default(true)

  rol                     Rol
  branchId                Int
  branch                  Branch @relation(fields: [branchId], references: [id])

  createdAt               DateTime @default(now()) @db.Timestamp()
  updatedAt               DateTime @default(now()) @updatedAt @db.Timestamp()
}

model Branch{
  id                      Int @default(autoincrement()) @id
  address                 String @db.VarChar(60)
  name                    String @db.VarChar(50)
  lat                     Decimal @db.Decimal()
  lng                     Decimal @db.Decimal()
  status                  Boolean @default(true)

  cityId                  Int 
  city                    City @relation(fields: [cityId], references: [id])

  employee                Employee[]

  createdAt               DateTime @default(now()) @db.Timestamp()  
  updatedAt               DateTime @default(now()) @updatedAt @db.Timestamp()
}

model City{
  id                      Int @default(autoincrement()) @id
  name                    String @db.VarChar(50)  
  status                  Boolean @default(true)

  branch                  Branch[]

  createdAt               DateTime @default(now()) @db.Timestamp()
  updatedAt               DateTime @default(now()) @updatedAt @db.Timestamp()
}

